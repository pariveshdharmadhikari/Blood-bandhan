{"ast":null,"code":"var _jsxFileName = \"/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/CreatePost.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.username) {\n    errors.username = 'Required';\n  } else if (values.username.length > 15) {\n    errors.username = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.age) {\n    errors.age = 'Required';\n  } else if (isNaN(Number(values.age))) {\n    errors.age = 'Must be a number';\n  } else if (Number(values.age) < 18) {\n    errors.age = 'Sorry, you must be at least 18 years old';\n  }\n\n  return errors;\n};\n\nvar renderField = function renderField(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      type = _ref.type,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      warning = _ref$meta.warning;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, label), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({}, input, {\n    placeholder: label,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, error)));\n};\n\nvar SyncValidationForm = function SyncValidationForm(props) {\n  var handleSubmit = props.handleSubmit,\n      pristine = props.pristine,\n      reset = props.reset,\n      submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui form error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    component: renderField,\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: renderField,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"age\",\n    type: \"number\",\n    component: renderField,\n    label: \"Age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: 'syncValidation',\n  // a unique identifier for this form\n  validate: validate // <--- validation function given to redux-form\n\n})(SyncValidationForm);","map":{"version":3,"sources":["/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/CreatePost.js"],"names":["React","Field","reduxForm","validate","values","errors","username","length","email","test","age","isNaN","Number","renderField","input","label","type","meta","touched","error","warning","SyncValidationForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nconst validate = values => {\n  const errors = {}\n  if (!values.username) {\n    errors.username = 'Required'\n  } else if (values.username.length > 15) {\n    errors.username = 'Must be 15 characters or less'\n  }\n  if (!values.email) {\n    errors.email = 'Required'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address'\n  }\n  if (!values.age) {\n    errors.age = 'Required'\n  } else if (isNaN(Number(values.age))) {\n    errors.age = 'Must be a number'\n  } else if (Number(values.age) < 18) {\n    errors.age = 'Sorry, you must be at least 18 years old'\n  }\n  return errors\n}\n\nconst renderField = ({input,label,type,meta: { touched, error, warning }}) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} placeholder={label} type={type} />\n      {touched && (error && <span>{error}</span>)}\n    </div>\n  </div>\n)\n\nconst SyncValidationForm = props => {\n  const { handleSubmit, pristine, reset, submitting } = props\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className='ui form error'>\n      <div className='field'>\n      <Field\n        name=\"username\"\n        type=\"text\"\n        component={renderField}\n        label=\"Username\"\n      />\n      </div>\n      <div className='field'>\n      <Field name=\"email\" type=\"email\" component={renderField} label=\"Email\" />\n      </div>\n      <div className='field'></div>\n      <Field name=\"age\" type=\"number\" component={renderField} label=\"Age\" />\n      </div>\n      <div>\n        <button type=\"submit\" disabled={submitting}>\n          Submit\n        </button>\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'syncValidation', // a unique identifier for this form\n  validate, // <--- validation function given to redux-form\n})(SyncValidationForm)"]},"metadata":{},"sourceType":"module"}