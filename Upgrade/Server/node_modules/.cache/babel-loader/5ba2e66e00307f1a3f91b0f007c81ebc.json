{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/EditPost.js\";\nimport React from 'react';\nimport PostForm from './PostForm';\nimport { updatePost, fetchPost } from '../action';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { toastr } from 'react-redux-toastr';\nimport history from '../History';\nimport { Link } from 'react-router-dom';\n\nvar EditPost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditPost, _React$Component);\n\n  function EditPost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditPost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditPost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      post: ''\n    };\n\n    _this.onSubmit = function (formvalues) {\n      var id = _this.props.match.params.id;\n\n      _this.props.updatePost(id, formvalues, function (res) {\n        if (res.status === 200) {\n          toastr.success('Done', \"Post updated successfully\");\n          history.push('/Dashboard');\n        } else {\n          toastr.error('Something Went Wrong', \"Please try again\");\n        }\n      });\n    };\n\n    _this.initiateForm = function () {\n      var post = _this.state.post;\n      console.log(post, \"initiate\");\n\n      var content = _this.strip_html_tags(post.content.rendered);\n\n      var initialvalues = {\n        \"title\": post.title.rendered,\n        \"content\": content,\n        \"status\": post.status\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \" ui secondary pointing menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"right menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Dashboard\",\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Back to DashBoard\"))), React.createElement(PostForm, {\n        initialValues: _.pick(initialvalues, 'title', 'content', 'status'),\n        onSubmit: _this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(EditPost, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.props.fetchPost(this.props.match.params.id, function (res) {\n        _this2.setState({\n          post: res\n        });\n      });\n    }\n  }, {\n    key: \"strip_html_tags\",\n    value: function strip_html_tags(str) {\n      if (str === null || str === '') return '';else str = str.toString();\n      return str.replace(/<[^>]*>/g, '');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (localStorage.getItem('IsLogedIn')) {} else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Must Login First\"));\n      }\n    }\n  }]);\n\n  return EditPost;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state.posts, 'map state to props');\n  return {\n    post: state.posts\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updatePost: updatePost,\n  fetchPost: fetchPost\n})(EditPost);","map":{"version":3,"sources":["/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/EditPost.js"],"names":["React","PostForm","updatePost","fetchPost","connect","_","toastr","history","Link","EditPost","state","post","onSubmit","formvalues","id","props","match","params","res","status","success","push","error","initiateForm","console","log","content","strip_html_tags","rendered","initialvalues","title","pick","setState","str","toString","replace","localStorage","getItem","textAlign","Component","mapStateToProps","posts"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PostForm from './PostForm';\nimport { updatePost ,fetchPost} from '../action';\nimport { connect } from 'react-redux';\nimport _ from 'lodash'\nimport {toastr} from 'react-redux-toastr';\nimport history from '../History';\nimport {Link} from 'react-router-dom';\n\n\n\nclass EditPost extends React.Component {\n    state={post:''}\n    componentWillMount(){\n        this.props.fetchPost(this.props.match.params.id,(res)=>{\n            this.setState({post:res})\n        })\n    }\n\n    onSubmit = (formvalues) => {\n        const {id}=this.props.match.params;\n        this.props.updatePost(id,formvalues,(res)=>{\n            if(res.status===200){\n                toastr.success('Done',\"Post updated successfully\");\n                history.push('/Dashboard');\n            }\n            else{\n                toastr.error('Something Went Wrong',\"Please try again\"); \n            }\n        });\n\n    }\n    strip_html_tags(str) {\n        if ((str === null) || (str === ''))\n            return '';\n        else\n            str = str.toString();\n        return str.replace(/<[^>]*>/g, '');\n    }\n\n    initiateForm = () => {  \n                const {post} =this.state;\n                console.log(post,\"initiate\");\n                const content = this.strip_html_tags(post.content.rendered);\n                const initialvalues = {\n                    \"title\": post.title.rendered,\n                    \"content\": content,\n                    \"status\": post.status\n                };\n                return (\n                    <div>\n                        <div className=\" ui secondary pointing menu\" >\n                        <div className=\"right menu\" >\n                            <Link to=\"/Dashboard\" className=\"item\" >Back to DashBoard</Link>\n                        </div>\n                    </div>\n                        <PostForm\n                            initialValues={_.pick(initialvalues, 'title', 'content', 'status')}\n                            onSubmit={this.onSubmit}\n                        />\n                    </div>\n                )\n            }\n\n    render() {\n        if(localStorage.getItem('IsLogedIn')){\n\n        }\n        else{\n            return(\n                <div>\n                    <h2 style={{textAlign:'center'}}>Must Login First</h2>\n                </div>\n            );\n        }\n\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state.posts,'map state to props');\n    return { post: state.posts }\n}\n\nexport default connect(mapStateToProps, {updatePost,fetchPost})(EditPost);"]},"metadata":{},"sourceType":"module"}