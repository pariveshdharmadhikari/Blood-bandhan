{"ast":null,"code":"var _jsxFileName = \"/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/CreatePost.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.username) {\n    errors.username = 'Required';\n  } else if (values.username.length > 15) {\n    errors.username = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.age) {\n    errors.age = 'Required';\n  } else if (isNaN(Number(values.age))) {\n    errors.age = 'Must be a number';\n  } else if (Number(values.age) < 18) {\n    errors.age = 'Sorry, you must be at least 18 years old';\n  }\n\n  return errors;\n};\n\nvar renderInput = function renderInput(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      type = _ref.type,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      warning = _ref$meta.warning;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, label), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({}, input, {\n    placeholder: label,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, error)));\n};\n\nvar SyncValidationForm = function SyncValidationForm(props) {\n  var handleSubmit = props.handleSubmit,\n      pristine = props.pristine,\n      reset = props.reset,\n      submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui form error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    component: renderInput,\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: renderField,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"age\",\n    type: \"number\",\n    component: renderInput,\n    label: \"Age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"ui secondary button\",\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Clear Values\"), React.createElement(\"button\", {\n    className: \"ui primary button\",\n    type: \"submit\",\n    disabled: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nexport default reduxForm({\n  form: 'syncValidation',\n  // a unique identifier for this form\n  validate: validate // <--- validation function given to redux-form\n\n})(SyncValidationForm);","map":{"version":3,"sources":["/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/CreatePost.js"],"names":["React","Field","reduxForm","validate","values","errors","username","length","email","test","age","isNaN","Number","renderInput","input","label","type","meta","touched","error","warning","SyncValidationForm","props","handleSubmit","pristine","reset","submitting","renderField","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nconst validate = values => {\n    const errors = {}\n    if (!values.username) {\n        errors.username = 'Required'\n    } else if (values.username.length > 15) {\n        errors.username = 'Must be 15 characters or less'\n    }\n    if (!values.email) {\n        errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address'\n    }\n    if (!values.age) {\n        errors.age = 'Required'\n    } else if (isNaN(Number(values.age))) {\n        errors.age = 'Must be a number'\n    } else if (Number(values.age) < 18) {\n        errors.age = 'Sorry, you must be at least 18 years old'\n    }\n    return errors\n}\n\nconst renderInput = ({ input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input {...input} placeholder={label} type={type} />\n            {touched && (error && <span>{error}</span>)}\n        </div>\n    </div>\n)\n\nconst SyncValidationForm = props => {\n    const { handleSubmit, pristine, reset, submitting } = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className='ui form error'>\n                <div className='field'>\n                    <Field\n                        name=\"username\"\n                        type=\"text\"\n                        component={renderInput}\n                        label=\"Username\"\n                    />\n                </div>\n                <div className='field'>\n                    <Field name=\"email\" type=\"email\" component={renderField} label=\"Email\" />\n                </div>\n                <div className='field'>\n                    <Field name=\"age\" type=\"number\" component={renderInput} label=\"Age\" />\n                </div>\n\n                <div className='field'>\n                    <button className='ui secondary button' type=\"button\" disabled={pristine || submitting} onClick={reset}>\n                        Clear Values\n                    </button>\n                    <button className='ui primary button' type=\"submit\" disabled={submitting}>\n                        Submit\n                    </button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'syncValidation', // a unique identifier for this form\n    validate, // <--- validation function given to redux-form\n})(SyncValidationForm)"]},"metadata":{},"sourceType":"module"}