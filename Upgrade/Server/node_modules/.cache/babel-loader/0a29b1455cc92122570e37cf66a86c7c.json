{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/Dashboard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PostList from './PostList';\nimport '../css/Dashboard.css';\nimport { fetchPosts } from '../action';\nimport { connect } from 'react-redux';\nimport { toastr } from 'react-redux-toastr';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      data: undefined\n    };\n\n    _this2.onLogout = function () {\n      localStorage.removeItem('token');\n      localStorage.setItem(\"IsLogedIn\", false);\n      toastr.info('Logout Successfully');\n    };\n\n    _this2.renderbutton = function (uid) {\n      var userid = localStorage.getItem('userid');\n\n      if (uid == userid) {\n        React.createElement(\"button\", {\n          classname: \"ui pro\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this2.renderlist = function () {\n      if (_this2.state.data !== undefined) {\n        var _this = _assertThisInitialized(_assertThisInitialized(_this2));\n\n        return _this2.state.data.map(function (post, index) {\n          var description = _this.strip_html_tags(post.excerpt.rendered);\n\n          return React.createElement(\"div\", {\n            className: \"item\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, _this.renderbutton(post.author), React.createElement(\"i\", {\n            className: \"large middle aligned icon user\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, post.title.rendered), React.createElement(\"div\", {\n            className: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, _this2.trimByWord(description))));\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Loading...\"));\n      }\n    };\n\n    return _this2;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      if (localStorage.getItem('IsLogedIn')) {\n        this.props.fetchPosts(function (res) {\n          _this3.setState({\n            data: res.data\n          });\n        });\n      }\n    }\n  }, {\n    key: \"strip_html_tags\",\n    value: function strip_html_tags(str) {\n      if (str === null || str === '') return false;else str = str.toString();\n      return str.replace(/<[^>]*>/g, '');\n    }\n  }, {\n    key: \"trimByWord\",\n    value: function trimByWord(sentence) {\n      var result = sentence;\n      var resultArray = result.split(' ');\n\n      if (resultArray.length > 10) {\n        resultArray = resultArray.slice(0, 10);\n        result = resultArray.join(' ') + 'â€¦';\n      }\n\n      return result;\n    }\n  }, {\n    key: \"renderDashBoard\",\n    value: function renderDashBoard() {\n      var name = localStorage.getItem(\"Username\");\n      var temp = name.charAt(0).toUpperCase();\n\n      if (localStorage.getItem(\"IsLogedIn\")) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \" ui secondary pointing menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"right menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/EditProfile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"avatar-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"initials\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"character\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, temp)))), React.createElement(Link, {\n          to: \"/CreatePost\",\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Create Post\"), React.createElement(Link, {\n          to: \"/\",\n          onClick: this.onLogout,\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"LogOut\"))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ui celled list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, this.renderlist())));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \" ui secondary pointing menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"right menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\",\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Login\"))), React.createElement(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Please Login First\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.renderDashBoard());\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default connect(null, {\n  fetchPosts: fetchPosts\n})(Dashboard);","map":{"version":3,"sources":["/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/Dashboard.js"],"names":["React","Link","PostList","fetchPosts","connect","toastr","Dashboard","state","data","undefined","onLogout","localStorage","removeItem","setItem","info","renderbutton","uid","userid","getItem","renderlist","_this","map","post","index","description","strip_html_tags","excerpt","rendered","author","title","trimByWord","textAlign","props","res","setState","str","toString","replace","sentence","result","resultArray","split","length","slice","join","name","temp","charAt","toUpperCase","renderDashBoard","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport PostList from './PostList'\nimport '../css/Dashboard.css';\nimport { fetchPosts } from '../action';\nimport { connect } from 'react-redux';\nimport { toastr } from 'react-redux-toastr';\n\nclass Dashboard extends React.Component {\n    state = { data: undefined }\n\n    componentWillMount() {\n        if (localStorage.getItem('IsLogedIn')) {\n            this.props.fetchPosts((res) => {\n                this.setState({ data: res.data })\n            });\n        }\n    }\n\n    onLogout = () => {\n        localStorage.removeItem('token');\n        localStorage.setItem(\"IsLogedIn\", false);\n        toastr.info('Logout Successfully');\n\n    }\n\n    strip_html_tags(str) {\n        if ((str === null) || (str === ''))\n            return false;\n        else\n            str = str.toString();\n        return str.replace(/<[^>]*>/g, '');\n    }\n\n    trimByWord(sentence) {\n        var result = sentence;\n        var resultArray = result.split(' ');\n        if (resultArray.length > 10) {\n            resultArray = resultArray.slice(0, 10);\n            result = resultArray.join(' ') + 'â€¦';\n        }\n        return result;\n    }\n\n    renderbutton=(uid)=>{\n        const userid = localStorage.getItem('userid');\n        if(uid==userid){\n            <button classname='ui pro'></button>\n        }\n    }\n\n    renderlist = () => {\n\n        \n        if (this.state.data !== undefined) {\n            const _this = this;\n            return this.state.data.map((post, index) => {\n                const description = _this.strip_html_tags(post.excerpt.rendered)\n                return (\n                    <div className='item' key={index}>\n                        {_this.renderbutton(post.author)}\n                        <i className='large middle aligned icon user' />\n                        <div className='content'>\n                            <div className='header' >\n                                {post.title.rendered}\n                            </div>\n                            <div className='description'>\n                                {this.trimByWord(description)}\n                            </div>  \n                        </div>\n                        \n                    </div>\n                );\n            })\n        }\n        else {\n            return (\n                <div>\n                    <h2 style={{textAlign:'center'}}>Loading...</h2>\n                </div>\n            );\n        }\n\n    }\n\n    renderDashBoard() {\n        const name = localStorage.getItem(\"Username\")\n        const temp = (name.charAt(0)).toUpperCase();\n\n        if (localStorage.getItem(\"IsLogedIn\")) {\n            return (\n                <div>\n                    <div className=\" ui secondary pointing menu\" >\n                        <div className=\"right menu\" >\n\n                            <Link to=\"/EditProfile\">\n                                <div className=\"avatar-circle\" >\n                                    <span className=\"initials\" ><div className='character' >{temp}</div></span>\n                                </div></Link>\n                            <Link to=\"/CreatePost\" className=\"item\" >Create Post</Link>\n                            <Link to=\"/\" onClick={this.onLogout} className=\"item\" >LogOut</Link>\n\n                        </div>\n                    </div>\n                    <div>\n                        <div className='ui celled list' >\n                            {this.renderlist()}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div>\n                    <div className=\" ui secondary pointing menu\" >\n                        <div className=\"right menu\" >\n                            <Link to=\"/\" className=\"item\" >Login</Link>\n                        </div>\n                    </div>\n                    <h2 style={{ textAlign: 'center' }}>Please Login First</h2>\n                </div>\n\n            );\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.renderDashBoard()}\n            </div>\n\n        )\n    }\n}\n\nexport default connect(null, { fetchPosts })(Dashboard)"]},"metadata":{},"sourceType":"module"}