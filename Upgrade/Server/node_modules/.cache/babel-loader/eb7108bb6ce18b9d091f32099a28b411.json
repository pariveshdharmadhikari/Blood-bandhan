{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/Login.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login, fetchPosts } from '../action';\nimport history from '../History';\nimport { toastr } from 'react-redux-toastr';\nimport Header from './Header';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      flag: false\n    };\n\n    _this.renderInput = function (_ref) {\n      var input = _ref.input,\n          label = _ref.label,\n          type = _ref.type,\n          meta = _ref.meta,\n          maxLength = _ref.maxLength;\n      return React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        type: type,\n        maxLength: maxLength,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }))), _this.renderError(meta));\n    };\n\n    _this.onSubmit = function (formValues) {\n      _this.props.login(formValues, function (res) {\n        console.log(res, 'onsubmit');\n\n        if (res.status === 200) {\n          toastr.success(\"Welcome \".concat(res.data.user_display_name), 'Login Successfully');\n          localStorage.setItem(\"token\", res.data.token);\n          localStorage.setItem(\"IsLogedIn\", true);\n          localStorage.setItem(\"Username\", res.data.user_display_name);\n          history.push('/Dashboard');\n        } else {\n          toastr.error('Login Failed', \"Invalid username or Password\");\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"renderError\",\n    value: function renderError(_ref2) {\n      var error = _ref2.error,\n          touched = _ref2.touched;\n\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"errormessage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, error));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"form\", {\n        className: \"ui form error\",\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"username\",\n        component: this.renderInput,\n        label: \"Username\",\n        maxLength: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        component: this.renderInput,\n        label: \"Password\",\n        maxLength: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/Signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Create Account\")), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"ui button primary \",\n        style: {\n          alignContent: 'right'\n        },\n        autofocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.username) {\n    errors.username = 'you must Enter UserName';\n  }\n\n  if (!formValues.password) {\n    errors.password = 'you must Enter Password';\n  }\n\n  return errors;\n};\n\nvar wrapedform = reduxForm({\n  form: 'LoginForm',\n  validate: validate\n})(Login);\nexport default connect(null, {\n  login: login,\n  fetchPosts: fetchPosts\n})(wrapedform);","map":{"version":3,"sources":["/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/Login.js"],"names":["React","Field","reduxForm","Link","connect","login","fetchPosts","history","toastr","Header","Login","state","flag","renderInput","input","label","type","meta","maxLength","renderError","onSubmit","formValues","props","res","console","log","status","success","data","user_display_name","localStorage","setItem","token","push","error","touched","textAlign","handleSubmit","alignContent","Component","validate","errors","username","password","wrapedform","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login, fetchPosts } from '../action'\nimport history from '../History'\nimport { toastr } from 'react-redux-toastr';\nimport Header from './Header';\nclass Login extends React.Component {\n    state = { flag: false }\n\n\n\n    renderError({ error, touched }) {\n        if (touched && error) {\n            return (\n                <div className='error message'>\n                    <div className=\"errormessage\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = ({ input, label, type, meta, maxLength }) => {\n        return (\n\n            <div className='field'>\n                <div>\n                    <label>{label}</label>\n                    <input {...input} type={type} maxLength={maxLength} />\n                </div>\n                {this.renderError(meta)}\n            </div>\n        )\n    }\n\n\n\n\n    onSubmit = (formValues) => {\n        this.props.login(formValues, (res) => {\n            console.log(res, 'onsubmit')\n            if (res.status === 200) {\n                toastr.success(`Welcome ${res.data.user_display_name}`, 'Login Successfully');\n                localStorage.setItem(\"token\", res.data.token);\n                localStorage.setItem(\"IsLogedIn\", true);\n                localStorage.setItem(\"Username\", res.data.user_display_name);\n\n                history.push('/Dashboard');\n            }\n            else {\n                toastr.error('Login Failed', `Invalid username or Password`);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <h2 style={{ textAlign: 'center' }}>Login</h2>\n                <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                    <Field name=\"username\" component={this.renderInput} label=\"Username\" maxLength='20' />\n                    <Field name=\"password\" type='password' component={this.renderInput} label=\"Password\" maxLength='20' />\n                    <Link to='/Signup'><button className=\"ui button\">Create Account</button></Link>\n                    <button  type=\"submit\" className=\"ui button primary \" style={{ alignContent: 'right' }} autofocus>Login</button>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {}\n    if (!formValues.username) {\n        errors.username = 'you must Enter UserName'\n    }\n    if (!formValues.password) {\n        errors.password = 'you must Enter Password'\n    }\n    return errors;\n}\n\n\n\nconst wrapedform = reduxForm({\n    form: 'LoginForm',\n    validate\n})(Login);\n\nexport default connect(null, { login, fetchPosts })(wrapedform);\n\n\n"]},"metadata":{},"sourceType":"module"}