{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/Dashboard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/Dashboard.css';\nimport { fetchPosts, deletePost } from '../action';\nimport { connect } from 'react-redux';\nimport { toastr } from 'react-redux-toastr';\nimport Popup from './DeletePopup';\nimport Modal from 'react-responsive-modal';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      data: undefined,\n      popupState: false,\n      postid: ''\n    };\n\n    _this2.onLogout = function () {\n      localStorage.removeItem('token');\n      localStorage.setItem(\"IsLogedIn\", false);\n      toastr.info('Logout Successfully');\n    };\n\n    _this2.renderPopup = function (id) {\n      _this2.setState({\n        popupState: true,\n        postid: id\n      });\n    };\n\n    _this2.renderbutton = function (uid, id) {\n      var userid = localStorage.getItem('userid'); // this.setState({ postid: id });\n      // console.log(id,'renderbutton');\n\n      if (uid.toString() === userid) {\n        return React.createElement(\"div\", {\n          className: \"right floated content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui primary button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          className: \"ui negative button\",\n          onClick: function onClick() {\n            return _this2.renderPopup(id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Delete\"));\n      }\n    };\n\n    _this2.renderlist = function () {\n      if (_this2.state.data !== undefined) {\n        var _this = _assertThisInitialized(_assertThisInitialized(_this2));\n\n        return _this2.state.data.map(function (post, index) {\n          var description = _this.strip_html_tags(post.excerpt.rendered);\n\n          return React.createElement(\"div\", {\n            className: \"item\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, _this.renderbutton(post.author, post.id), React.createElement(\"i\", {\n            className: \"large middle aligned icon user\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, post.title.rendered), React.createElement(\"div\", {\n            className: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, _this2.trimByWord(description))));\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Loading...\"));\n      }\n    };\n\n    _this2.deletePost = function () {\n      _this2.props.deletePost(_this2.state.postid, function (res) {\n        console.log(res);\n      });\n\n      _this2.setState({\n        popupState: false\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      if (localStorage.getItem('IsLogedIn')) {\n        this.props.fetchPosts(function (res) {\n          _this3.setState({\n            data: res.data\n          });\n        });\n      }\n    }\n  }, {\n    key: \"strip_html_tags\",\n    value: function strip_html_tags(str) {\n      if (str === null || str === '') return false;else str = str.toString();\n      return str.replace(/<[^>]*>/g, '');\n    }\n  }, {\n    key: \"trimByWord\",\n    value: function trimByWord(sentence) {\n      var result = sentence;\n      var resultArray = result.split(' ');\n\n      if (resultArray.length > 10) {\n        resultArray = resultArray.slice(0, 10);\n        result = resultArray.join(' ') + 'â€¦';\n      }\n\n      return result;\n    }\n  }, {\n    key: \"deletePopup\",\n    value: function deletePopup() {\n      var popupState = this.state.popupState;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        open: popupState,\n        center: true,\n        showCloseIcon: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Confirm to delete?\"), React.createElement(\"button\", {\n        className: \"ui negative button\",\n        onClick: this.deletePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"DELETE\")));\n    }\n  }, {\n    key: \"renderDashBoard\",\n    value: function renderDashBoard() {\n      var name = localStorage.getItem(\"Username\");\n      var temp = name.charAt(0).toUpperCase();\n\n      if (localStorage.getItem(\"IsLogedIn\")) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \" ui secondary pointing menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"right menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/EditProfile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"avatar-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"initials\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"character\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, temp)))), React.createElement(Link, {\n          to: \"/CreatePost\",\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Create Post\"), React.createElement(Link, {\n          to: \"/\",\n          onClick: this.onLogout,\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"LogOut\"))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"POST LIST\"), React.createElement(\"div\", {\n          className: \"ui celled list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, this.renderlist())));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \" ui secondary pointing menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"right menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\",\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, \"Login\"))), React.createElement(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \"Please Login First\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, this.state.popupState && this.deletePopup(), this.renderDashBoard());\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default connect(null, {\n  fetchPosts: fetchPosts,\n  deletePost: deletePost\n})(Dashboard);","map":{"version":3,"sources":["/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/Dashboard.js"],"names":["React","Link","fetchPosts","deletePost","connect","toastr","Popup","Modal","Dashboard","state","data","undefined","popupState","postid","onLogout","localStorage","removeItem","setItem","info","renderPopup","id","setState","renderbutton","uid","userid","getItem","toString","renderlist","_this","map","post","index","description","strip_html_tags","excerpt","rendered","author","title","trimByWord","textAlign","props","res","console","log","str","replace","sentence","result","resultArray","split","length","slice","join","name","temp","charAt","toUpperCase","deletePopup","renderDashBoard","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,sBAAP;AACA,SAASC,UAAT,EAAoBC,UAApB,QAAsC,WAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;IAEMC,S;;;;;;;;;;;;;;;;;WACFC,K,GAAQ;AAAEC,MAAAA,IAAI,EAAEC,SAAR;AAAmBC,MAAAA,UAAU,EAAE,KAA/B;AAAqCC,MAAAA,MAAM,EAAC;AAA5C,K;;WAURC,Q,GAAW,YAAM;AACbC,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,WAArB,EAAkC,KAAlC;AACAZ,MAAAA,MAAM,CAACa,IAAP,CAAY,qBAAZ;AAEH,K;;WAoBDC,W,GAAc,UAACC,EAAD,EAAQ;AAClB,aAAKC,QAAL,CAAc;AAAET,QAAAA,UAAU,EAAE,IAAd;AAAqBC,QAAAA,MAAM,EAACO;AAA5B,OAAd;AAEH,K;;WAEDE,Y,GAAe,UAACC,GAAD,EAAKH,EAAL,EAAY;AACvB,UAAMI,MAAM,GAAGT,YAAY,CAACU,OAAb,CAAqB,QAArB,CAAf,CADuB,CAEvB;AACA;;AACA,UAAIF,GAAG,CAACG,QAAJ,OAAmBF,MAAvB,EAA+B;AAC3B,eACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAuC,UAAA,OAAO,EAAE;AAAA,mBAAI,OAAKL,WAAL,CAAiBC,EAAjB,CAAJ;AAAA,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ;AAQH;AACJ,K;;WAEDO,U,GAAa,YAAM;AAGf,UAAI,OAAKlB,KAAL,CAAWC,IAAX,KAAoBC,SAAxB,EAAmC;AAC/B,YAAMiB,KAAK,yDAAX;;AACA,eAAO,OAAKnB,KAAL,CAAWC,IAAX,CAAgBmB,GAAhB,CAAoB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACxC,cAAMC,WAAW,GAAGJ,KAAK,CAACK,eAAN,CAAsBH,IAAI,CAACI,OAAL,CAAaC,QAAnC,CAApB;;AACA,iBAEQ;AAAK,YAAA,SAAS,EAAC,MAAf;AAAsB,YAAA,GAAG,EAAEJ,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKH,KAAK,CAACN,YAAN,CAAmBQ,IAAI,CAACM,MAAxB,EAA+BN,IAAI,CAACV,EAApC,CADL,EAEI;AAAG,YAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKU,IAAI,CAACO,KAAL,CAAWF,QADhB,CADJ,EAII;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,OAAKG,UAAL,CAAgBN,WAAhB,CADL,CAJJ,CAHJ,CAFR;AAmBH,SArBM,CAAP;AAsBH,OAxBD,MAyBK;AACD,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,KAAK,EAAE;AAAEO,YAAAA,SAAS,EAAE;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CADJ;AAKH;AAEJ,K;;WAEDpC,U,GAAW,YAAI;AACX,aAAKqC,KAAL,CAAWrC,UAAX,CAAsB,OAAKM,KAAL,CAAWI,MAAjC,EAAwC,UAAC4B,GAAD,EAAO;AAC3CC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAFD;;AAGA,aAAKpB,QAAL,CAAc;AAAET,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,K;;;;;;;yCAjGkB;AAAA;;AACjB,UAAIG,YAAY,CAACU,OAAb,CAAqB,WAArB,CAAJ,EAAuC;AACnC,aAAKe,KAAL,CAAWtC,UAAX,CAAsB,UAACuC,GAAD,EAAS;AAC3B,UAAA,MAAI,CAACpB,QAAL,CAAc;AAAEX,YAAAA,IAAI,EAAE+B,GAAG,CAAC/B;AAAZ,WAAd;AACH,SAFD;AAGH;AACJ;;;oCASekC,G,EAAK;AACjB,UAAKA,GAAG,KAAK,IAAT,IAAmBA,GAAG,KAAK,EAA/B,EACI,OAAO,KAAP,CADJ,KAGIA,GAAG,GAAGA,GAAG,CAAClB,QAAJ,EAAN;AACJ,aAAOkB,GAAG,CAACC,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAP;AACH;;;+BAEUC,Q,EAAU;AACjB,UAAIC,MAAM,GAAGD,QAAb;AACA,UAAIE,WAAW,GAAGD,MAAM,CAACE,KAAP,CAAa,GAAb,CAAlB;;AACA,UAAID,WAAW,CAACE,MAAZ,GAAqB,EAAzB,EAA6B;AACzBF,QAAAA,WAAW,GAAGA,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAd;AACAJ,QAAAA,MAAM,GAAGC,WAAW,CAACI,IAAZ,CAAiB,GAAjB,IAAwB,GAAjC;AACH;;AACD,aAAOL,MAAP;AACH;;;kCAoEa;AAAA,UACFnC,UADE,GACa,KAAKH,KADlB,CACFG,UADE;AAEV,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,UAAb;AAAyB,QAAA,MAAM,MAA/B;AAAgC,QAAA,aAAa,EAAE,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAuC,QAAA,OAAO,EAAE,KAAKT,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF,CADF;AAQD;;;sCAEe;AACd,UAAMkD,IAAI,GAAGtC,YAAY,CAACU,OAAb,CAAqB,UAArB,CAAb;AACA,UAAM6B,IAAI,GAAID,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAD,CAAiBC,WAAjB,EAAb;;AAEA,UAAIzC,YAAY,CAACU,OAAb,CAAqB,WAArB,CAAJ,EAAuC;AACnC,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4B;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6B6B,IAA7B,CAA5B,CADJ,CADJ,CAFJ,EAMI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,aAAT;AAAuB,UAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANJ,EAOI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,OAAO,EAAE,KAAKxC,QAA3B;AAAqC,UAAA,SAAS,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,CADJ,CADJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,KAAK,EAAE;AAAEyB,YAAAA,SAAS,EAAE;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKZ,UAAL,EADL,CAFJ,CAbJ,CADJ;AAsBH,OAvBD,MAwBK;AACD,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,CADJ,EAMI;AAAI,UAAA,KAAK,EAAE;AAAEY,YAAAA,SAAS,EAAE;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANJ,CADJ;AAWH;AACJ;;;6BACQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK9B,KAAL,CAAWG,UAAX,IAAuB,KAAK6C,WAAL,EAD5B,EAEK,KAAKC,eAAL,EAFL,CADJ;AAOH;;;;EApKmB1D,KAAK,CAAC2D,S;;AAuK9B,eAAevD,OAAO,CAAC,IAAD,EAAO;AAAEF,EAAAA,UAAU,EAAVA,UAAF;AAAaC,EAAAA,UAAU,EAAVA;AAAb,CAAP,CAAP,CAAyCK,SAAzC,CAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport '../css/Dashboard.css';\nimport { fetchPosts,deletePost } from '../action';\nimport { connect } from 'react-redux';\nimport { toastr } from 'react-redux-toastr';\nimport Popup from './DeletePopup';\nimport Modal from 'react-responsive-modal';\n\nclass Dashboard extends React.Component {\n    state = { data: undefined, popupState: false,postid:'' }\n\n    componentWillMount() {\n        if (localStorage.getItem('IsLogedIn')) {\n            this.props.fetchPosts((res) => {\n                this.setState({ data: res.data })\n            });\n        }\n    }\n\n    onLogout = () => {\n        localStorage.removeItem('token');\n        localStorage.setItem(\"IsLogedIn\", false);\n        toastr.info('Logout Successfully');\n\n    }\n\n    strip_html_tags(str) {\n        if ((str === null) || (str === ''))\n            return false;\n        else\n            str = str.toString();\n        return str.replace(/<[^>]*>/g, '');\n    }\n\n    trimByWord(sentence) {\n        var result = sentence;\n        var resultArray = result.split(' ');\n        if (resultArray.length > 10) {\n            resultArray = resultArray.slice(0, 10);\n            result = resultArray.join(' ') + 'â€¦';\n        }\n        return result;\n    }\n\n    renderPopup = (id) => {\n        this.setState({ popupState: true , postid:id});\n        \n    }\n\n    renderbutton = (uid,id) => {\n        const userid = localStorage.getItem('userid');\n        // this.setState({ postid: id });\n        // console.log(id,'renderbutton');\n        if (uid.toString() === userid) {\n            return (\n                <div className='right floated content'>\n                    <button className='ui primary button' >Edit</button>\n                    <button className='ui negative button' onClick={()=>this.renderPopup(id)} >Delete</button>\n                </div>\n\n            );\n\n        }\n    }\n\n    renderlist = () => {\n\n\n        if (this.state.data !== undefined) {\n            const _this = this;\n            return this.state.data.map((post, index) => {\n                const description = _this.strip_html_tags(post.excerpt.rendered)\n                return (\n                 \n                        <div className='item' key={index}>\n                            {_this.renderbutton(post.author,post.id)}\n                            <i className='large middle aligned icon user' />\n                            <div className='content'>\n                                <div className='header' >\n                                    {post.title.rendered}\n                                </div>\n                                <div className='description'>\n                                    {this.trimByWord(description)}\n                                </div>\n\n                            </div>\n                        </div>\n\n                  \n\n                );\n            })\n        }\n        else {\n            return (\n                <div>\n                    <h2 style={{ textAlign: 'center' }}>Loading...</h2>\n                </div>\n            );\n        }\n\n    }\n\n    deletePost=()=>{\n        this.props.deletePost(this.state.postid,(res)=>{\n            console.log(res)\n        })\n        this.setState({ popupState: false });\n      }\n\n    deletePopup() {\n        const { popupState } = this.state;\n        return (\n          <div>\n            <Modal open={popupState} center showCloseIcon={false} > \n              <h2>Confirm to delete?</h2>\n              <button className='ui negative button' onClick={this.deletePost}>DELETE</button>\n            </Modal>\n          </div>\n        );\n      }\n\n    renderDashBoard() {\n        const name = localStorage.getItem(\"Username\")\n        const temp = (name.charAt(0)).toUpperCase();\n\n        if (localStorage.getItem(\"IsLogedIn\")) {\n            return (\n                <div>\n                    <div className=\" ui secondary pointing menu\" >\n                        <div className=\"right menu\" >\n\n                            <Link to=\"/EditProfile\">\n                                <div className=\"avatar-circle\" >\n                                    <span className=\"initials\" ><div className='character' >{temp}</div></span>\n                                </div></Link>\n                            <Link to=\"/CreatePost\" className=\"item\" >Create Post</Link>\n                            <Link to=\"/\" onClick={this.onLogout} className=\"item\" >LogOut</Link>\n\n                        </div>\n                    </div>\n                    <div>\n                        <h2 style={{ textAlign: 'center' }}>POST LIST</h2>\n                        <div className='ui celled list' >\n                            {this.renderlist()}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div>\n                    <div className=\" ui secondary pointing menu\" >\n                        <div className=\"right menu\" >\n                            <Link to=\"/\" className=\"item\" >Login</Link>\n                        </div>\n                    </div>\n                    <h2 style={{ textAlign: 'center' }}>Please Login First</h2>\n                </div>\n\n            );\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.state.popupState&&this.deletePopup()}\n                {this.renderDashBoard()}\n            </div>\n\n        )\n    }\n}\n\nexport default connect(null, { fetchPosts,deletePost })(Dashboard)"]},"metadata":{},"sourceType":"module"}