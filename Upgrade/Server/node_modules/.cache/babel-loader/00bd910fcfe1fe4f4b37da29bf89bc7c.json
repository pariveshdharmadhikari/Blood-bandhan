{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/PostForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport DropdownList from 'react-widgets/lib/DropdownList';\nimport 'react-widgets/dist/css/react-widgets.css';\n\nvar CreatePost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePost, _React$Component);\n\n  function CreatePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreatePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreatePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderField = function (_ref) {\n      var input = _ref.input,\n          label = _ref.label,\n          type = _ref.type,\n          _ref$meta = _ref.meta,\n          touched = _ref$meta.touched,\n          error = _ref$meta.error,\n          warning = _ref$meta.warning;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, label), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"textarea\", Object.assign({}, input, {\n        placeholder: label,\n        type: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      })), touched && error && React.createElement(\"span\", {\n        className: \"errormessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, error)));\n    };\n\n    _this.renderInput = function (_ref2) {\n      var input = _ref2.input,\n          label = _ref2.label,\n          type = _ref2.type,\n          _ref2$meta = _ref2.meta,\n          touched = _ref2$meta.touched,\n          error = _ref2$meta.error;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, label), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({}, input, {\n        placeholder: label,\n        type: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), touched && error && React.createElement(\"span\", {\n        className: \"errormessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, error)));\n    };\n\n    _this.onSubmit = function (values) {\n      _this.props.onSubmit(values);\n    };\n\n    _this.status = [{\n      type: 'publish',\n      value: 'publish'\n    }, {\n      type: 'future',\n      value: 'future'\n    }, {\n      type: 'draft',\n      value: 'draft'\n    }, {\n      type: 'pending',\n      value: 'pending'\n    }, {\n      type: 'private',\n      value: 'private'\n    }];\n\n    _this.renderDropdownList = function (_ref3) {\n      var input = _ref3.input,\n          data = _ref3.data,\n          valueField = _ref3.valueField,\n          textField = _ref3.textField;\n      return React.createElement(DropdownList, Object.assign({}, input, {\n        defaultValue: \"publis\",\n        data: data,\n        valueField: valueField,\n        textField: textField,\n        onChange: input.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(CreatePost, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          reset = _this$props.reset,\n          submitting = _this$props.submitting;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Create Post\"), React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui form error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        type: \"text\",\n        component: this.renderInput,\n        label: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"description\",\n        component: this.renderField,\n        label: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"favoriteColor\",\n        component: this.renderDropdownList,\n        data: this.status,\n        valueField: \"value\",\n        textField: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui secondary button\",\n        type: \"button\",\n        disabled: this.props.pristine || this.props.submitting,\n        onClick: this.props.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Clear Values\"), React.createElement(\"button\", {\n        className: \"ui primary button\",\n        type: \"submit\",\n        disabled: this.props.submitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return CreatePost;\n}(React.Component);\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.title) {\n    errors.title = 'Required';\n  } else if (values.title.length > 15) {\n    errors.title = 'Must be 15 characters or less';\n  }\n\n  if (!values.description) {\n    errors.description = 'Required';\n  } // else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.description)) {\n  //     errors.description = 'Invalid description address'\n  // }\n\n\n  if (!values.age) {\n    errors.age = 'Required';\n  } else if (isNaN(Number(values.age))) {\n    errors.age = 'Must be a number';\n  } else if (Number(values.age) < 18) {\n    errors.age = 'Sorry, you must be at least 18 years old';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'syncValidation',\n  // a unique identifier for this form\n  validate: validate // <--- validation function given to redux-form\n\n})(CreatePost);","map":{"version":3,"sources":["/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/PostForm.js"],"names":["React","Field","reduxForm","DropdownList","CreatePost","renderField","input","label","type","meta","touched","error","warning","renderInput","onSubmit","values","props","status","value","renderDropdownList","data","valueField","textField","onChange","handleSubmit","pristine","reset","submitting","textAlign","Component","validate","errors","title","length","description","age","isNaN","Number","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,0CAAP;;IACMC,U;;;;;;;;;;;;;;;;;;UAGFC,W,GAAc;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,UAAUC,KAAV,QAAUA,KAAV;AAAA,UAAiBC,IAAjB,QAAiBA,IAAjB;AAAA,2BAAuBC,IAAvB;AAAA,UAA+BC,OAA/B,aAA+BA,OAA/B;AAAA,UAAwCC,KAAxC,aAAwCA,KAAxC;AAAA,UAA+CC,OAA/C,aAA+CA,OAA/C;AAAA,aACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQL,KAAR,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,kDAAcD,KAAd;AAAqB,QAAA,WAAW,EAAEC,KAAlC;AAAyC,QAAA,IAAI,EAAEC,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEKE,OAAO,IAAKC,KAAK,IAAI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCA,KAAjC,CAF1B,CAFJ,CADU;AAAA,K;;UAUdE,W,GAAc;AAAA,UAAGP,KAAH,SAAGA,KAAH;AAAA,UAAUC,KAAV,SAAUA,KAAV;AAAA,UAAiBC,IAAjB,SAAiBA,IAAjB;AAAA,6BAAuBC,IAAvB;AAAA,UAA+BC,OAA/B,cAA+BA,OAA/B;AAAA,UAAwCC,KAAxC,cAAwCA,KAAxC;AAAA,aACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQJ,KAAR,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,+CAAWD,KAAX;AAAkB,QAAA,WAAW,EAAEC,KAA/B;AAAsC,QAAA,IAAI,EAAEC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEKE,OAAO,IAAKC,KAAK,IAAI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCA,KAAjC,CAF1B,CAFJ,CADU;AAAA,K;;UAUdG,Q,GAAW,UAACC,MAAD,EAAY;AAEnB,YAAKC,KAAL,CAAWF,QAAX,CAAoBC,MAApB;AACH,K;;UAEDE,M,GAAS,CACL;AAAET,MAAAA,IAAI,EAAE,SAAR;AAAmBU,MAAAA,KAAK,EAAE;AAA1B,KADK,EAEL;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBU,MAAAA,KAAK,EAAE;AAAzB,KAFK,EAGL;AAAEV,MAAAA,IAAI,EAAE,OAAR;AAAiBU,MAAAA,KAAK,EAAE;AAAxB,KAHK,EAIL;AAAEV,MAAAA,IAAI,EAAE,SAAR;AAAmBU,MAAAA,KAAK,EAAE;AAA1B,KAJK,EAKL;AAAEV,MAAAA,IAAI,EAAE,SAAR;AAAmBU,MAAAA,KAAK,EAAE;AAA1B,KALK,C;;UAQTC,kB,GAAqB;AAAA,UAAGb,KAAH,SAAGA,KAAH;AAAA,UAAUc,IAAV,SAAUA,IAAV;AAAA,UAAgBC,UAAhB,SAAgBA,UAAhB;AAAA,UAA4BC,SAA5B,SAA4BA,SAA5B;AAAA,aACjB,oBAAC,YAAD,oBAAkBhB,KAAlB;AACA,QAAA,YAAY,EAAC,QADb;AAEI,QAAA,IAAI,EAAEc,IAFV;AAGI,QAAA,UAAU,EAAEC,UAHhB;AAII,QAAA,SAAS,EAAEC,SAJf;AAKI,QAAA,QAAQ,EAAEhB,KAAK,CAACiB,QALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADiB;AAAA,K;;;;;;;6BAQZ;AAAA,wBACiD,KAAKP,KADtD;AAAA,UACGQ,YADH,eACGA,YADH;AAAA,UACiBC,QADjB,eACiBA,QADjB;AAAA,UAC2BC,KAD3B,eAC2BA,KAD3B;AAAA,UACkCC,UADlC,eACkCA,UADlC;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAM,QAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWQ,YAAX,CAAwB,KAAKV,QAA7B,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,SAAS,EAAE,KAAKD,WAHpB;AAII,QAAA,KAAK,EAAC,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EASI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAE,KAAKR,WAA1C;AAAuD,QAAA,KAAK,EAAC,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CATJ,EAaI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,eADT;AAEI,QAAA,SAAS,EAAE,KAAKc,kBAFpB;AAGI,QAAA,IAAI,EAAE,KAAKF,MAHf;AAII,QAAA,UAAU,EAAC,OAJf;AAKI,QAAA,SAAS,EAAC,MALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAbJ,EAwBI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,IAAI,EAAC,QAA7C;AAAsD,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWS,QAAX,IAAuB,KAAKT,KAAL,CAAWW,UAAlG;AAA8G,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWU,KAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAII;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,IAAI,EAAC,QAA3C;AAAoD,QAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWW,UAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CAxBJ,CADJ,CAFJ,CADJ;AAwCH;;;;EAtFoB3B,KAAK,CAAC6B,S;;AAyF/B,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAf,MAAM,EAAI;AACvB,MAAMgB,MAAM,GAAG,EAAf;;AACA,MAAI,CAAChB,MAAM,CAACiB,KAAZ,EAAmB;AACfD,IAAAA,MAAM,CAACC,KAAP,GAAe,UAAf;AACH,GAFD,MAEO,IAAIjB,MAAM,CAACiB,KAAP,CAAaC,MAAb,GAAsB,EAA1B,EAA8B;AACjCF,IAAAA,MAAM,CAACC,KAAP,GAAe,+BAAf;AACH;;AACD,MAAI,CAACjB,MAAM,CAACmB,WAAZ,EAAyB;AACrBH,IAAAA,MAAM,CAACG,WAAP,GAAqB,UAArB;AACH,GATsB,CAUvB;AACA;AACA;;;AACA,MAAI,CAACnB,MAAM,CAACoB,GAAZ,EAAiB;AACbJ,IAAAA,MAAM,CAACI,GAAP,GAAa,UAAb;AACH,GAFD,MAEO,IAAIC,KAAK,CAACC,MAAM,CAACtB,MAAM,CAACoB,GAAR,CAAP,CAAT,EAA+B;AAClCJ,IAAAA,MAAM,CAACI,GAAP,GAAa,kBAAb;AACH,GAFM,MAEA,IAAIE,MAAM,CAACtB,MAAM,CAACoB,GAAR,CAAN,GAAqB,EAAzB,EAA6B;AAChCJ,IAAAA,MAAM,CAACI,GAAP,GAAa,0CAAb;AACH;;AACD,SAAOJ,MAAP;AACH,CArBD;;AAyBA,eAAe7B,SAAS,CAAC;AACrBoC,EAAAA,IAAI,EAAE,gBADe;AACG;AACxBR,EAAAA,QAAQ,EAARA,QAFqB,CAEX;;AAFW,CAAD,CAAT,CAGZ1B,UAHY,CAAf","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form';\nimport DropdownList from 'react-widgets/lib/DropdownList';\nimport 'react-widgets/dist/css/react-widgets.css'\nclass CreatePost extends React.Component {\n\n    //const { handleSubmit, pristine, reset, submitting } = props\n    renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n        <div>\n            <label>{label}</label>\n            <div>\n                <textarea {...input} placeholder={label} type={type} />\n                {touched && (error && <span className='errormessage' >{error}</span>)}\n            </div>\n        </div>\n    )\n\n    renderInput = ({ input, label, type, meta: { touched, error } }) => (\n        <div>\n            <label>{label}</label>\n            <div>\n                <input {...input} placeholder={label} type={type} />\n                {touched && (error && <span className='errormessage' >{error}</span>)}\n            </div>\n        </div>\n    )\n\n    onSubmit = (values) => {\n\n        this.props.onSubmit(values);\n    }\n    \n    status = [\n        { type: 'publish', value: 'publish' },\n        { type: 'future', value: 'future' },\n        { type: 'draft', value: 'draft' },\n        { type: 'pending', value: 'pending' },\n        { type: 'private', value: 'private' }\n    ]\n\n    renderDropdownList = ({ input, data, valueField, textField }) =>\n        <DropdownList {...input}\n        defaultValue=\"publis\"\n            data={data}\n            valueField={valueField}\n            textField={textField}\n            onChange={input.onChange} />\n\n    render() {\n        const { handleSubmit, pristine, reset, submitting } = this.props\n        return (\n            <div>\n                <h2 style={{ textAlign: 'center' }}>Create Post</h2>\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                    <div className='ui form error'>\n                        <div className='field'>\n                            <Field\n                                name=\"title\"\n                                type=\"text\"\n                                component={this.renderInput}\n                                label=\"Title\"\n                            />\n                        </div>\n                        <div className='field'>\n                            <Field name=\"description\" component={this.renderField} label=\"Description\" />\n                        </div>\n\n                        <div className='field'>\n                            <Field\n                                name=\"favoriteColor\"\n                                component={this.renderDropdownList}\n                                data={this.status}\n                                valueField=\"value\"\n                                textField=\"type\" />\n                        </div>\n\n\n\n                        <div className='field'>\n                            <button className='ui secondary button' type=\"button\" disabled={this.props.pristine || this.props.submitting} onClick={this.props.reset}>\n                                Clear Values\n                    </button>\n                            <button className='ui primary button' type=\"submit\" disabled={this.props.submitting}>\n                                Submit\n                    </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst validate = values => {\n    const errors = {}\n    if (!values.title) {\n        errors.title = 'Required'\n    } else if (values.title.length > 15) {\n        errors.title = 'Must be 15 characters or less'\n    }\n    if (!values.description) {\n        errors.description = 'Required'\n    }\n    // else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.description)) {\n    //     errors.description = 'Invalid description address'\n    // }\n    if (!values.age) {\n        errors.age = 'Required'\n    } else if (isNaN(Number(values.age))) {\n        errors.age = 'Must be a number'\n    } else if (Number(values.age) < 18) {\n        errors.age = 'Sorry, you must be at least 18 years old'\n    }\n    return errors\n}\n\n\n\nexport default reduxForm({\n    form: 'syncValidation', // a unique identifier for this form\n    validate, // <--- validation function given to redux-form\n})(CreatePost)\n\n\n\n"]},"metadata":{},"sourceType":"module"}