{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/EditPost.js\";\nimport React from 'react';\nimport PostForm from './PostForm';\nimport { updatePost } from '../action';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nvar EditPost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditPost, _React$Component);\n\n  function EditPost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditPost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditPost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formvalues) {\n      var id = _this.props.match.params.id;\n\n      _this.props.updatePost(id, formvalues, function (res) {\n        console.log(res, 'edit submit');\n      });\n    };\n\n    _this.initiateForm = function () {\n      var id = _this.props.match.params.id;\n      return _this.props.post.map(function (post, index) {\n        if (post.id.toString() === id) {\n          console.log(post, 'true');\n\n          var content = _this.strip_html_tags(post.content.rendered);\n\n          var initialvalues = {\n            \"title\": post.title.rendered,\n            \"content\": content,\n            \"status\": post.status\n          };\n          return React.createElement(\"div\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(PostForm, {\n            initialValues: _.pick(initialvalues, 'title', 'content', 'status'),\n            onSubmit: _this.onSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"strip_html_tags\",\n    value: function strip_html_tags(str) {\n      if (str === null || str === '') return '';else str = str.toString();\n      return str.replace(/<[^>]*>/g, '');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.post !== '') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, this.initiateForm());\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Please Try Again...\"));\n      }\n    }\n  }]);\n\n  return EditPost;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.posts\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updatePost: updatePost\n})(EditPost);","map":{"version":3,"sources":["/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/EditPost.js"],"names":["React","PostForm","updatePost","connect","_","EditPost","onSubmit","formvalues","id","props","match","params","res","console","log","initiateForm","post","map","index","toString","content","strip_html_tags","rendered","initialvalues","title","status","pick","str","replace","Component","mapStateToProps","state","posts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;;IAIMC,Q;;;;;;;;;;;;;;;;;;UAKFC,Q,GAAW,UAACC,UAAD,EAAgB;AAAA,UAChBC,EADgB,GACZ,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADL,CAChBH,EADgB;;AAEvB,YAAKC,KAAL,CAAWP,UAAX,CAAsBM,EAAtB,EAAyBD,UAAzB,EAAoC,UAACK,GAAD,EAAO;AACvCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAgB,aAAhB;AACH,OAFD;AAIH,K;;UASDG,Y,GAAe,YAAM;AACjB,UAAMP,EAAE,GAAG,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAAnC;AACA,aAAO,MAAKC,KAAL,CAAWO,IAAX,CAAgBC,GAAhB,CAAoB,UAACD,IAAD,EAAOE,KAAP,EAAiB;AACxC,YAAKF,IAAI,CAACR,EAAN,CAAUW,QAAV,OAAyBX,EAA7B,EAAiC;AAC7BK,UAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ,EAAkB,MAAlB;;AACA,cAAMI,OAAO,GAAG,MAAKC,eAAL,CAAqBL,IAAI,CAACI,OAAL,CAAaE,QAAlC,CAAhB;;AACA,cAAMC,aAAa,GAAG;AAClB,qBAASP,IAAI,CAACQ,KAAL,CAAWF,QADF;AAElB,uBAAWF,OAFO;AAGlB,sBAAUJ,IAAI,CAACS;AAHG,WAAtB;AAKA,iBACI;AAAK,YAAA,GAAG,EAAEP,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,QAAD;AACI,YAAA,aAAa,EAAEd,CAAC,CAACsB,IAAF,CAAOH,aAAP,EAAsB,OAAtB,EAA+B,SAA/B,EAA0C,QAA1C,CADnB;AAEI,YAAA,QAAQ,EAAE,MAAKjB,QAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAQH,SAhBD,MAiBK;AACD,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACJ,OAvBM,CAAP;AAwBH,K;;;;;;;wCA5CmB,CACnB;;;oCASeqB,G,EAAK;AACjB,UAAKA,GAAG,KAAK,IAAT,IAAmBA,GAAG,KAAK,EAA/B,EACI,OAAO,EAAP,CADJ,KAGIA,GAAG,GAAGA,GAAG,CAACR,QAAJ,EAAN;AACJ,aAAOQ,GAAG,CAACC,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAP;AACH;;;6BA8BQ;AACL,UAAI,KAAKnB,KAAL,CAAWO,IAAX,KAAoB,EAAxB,EAA4B;AACxB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKD,YAAL,EADL,CADJ;AAKH,OAND,MAOK;AACD,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CADJ;AAOH;AACJ;;;;EAjEkBf,KAAK,CAAC6B,S;;AAoE7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAE/B,SAAO;AAAEf,IAAAA,IAAI,EAAEe,KAAK,CAACC;AAAd,GAAP;AACH,CAHD;;AAKA,eAAe7B,OAAO,CAAC2B,eAAD,EAAkB;AAAC5B,EAAAA,UAAU,EAAVA;AAAD,CAAlB,CAAP,CAAuCG,QAAvC,CAAf","sourcesContent":["import React from 'react'\nimport PostForm from './PostForm';\nimport { updatePost } from '../action';\nimport { connect } from 'react-redux';\nimport _ from 'lodash'\n\n\n\nclass EditPost extends React.Component {\n\n    componentDidMount() {\n    }\n\n    onSubmit = (formvalues) => {\n        const {id}=this.props.match.params;\n        this.props.updatePost(id,formvalues,(res)=>{\n            console.log(res,'edit submit');\n        });\n\n    }\n    strip_html_tags(str) {\n        if ((str === null) || (str === ''))\n            return '';\n        else\n            str = str.toString();\n        return str.replace(/<[^>]*>/g, '');\n    }\n\n    initiateForm = () => {\n        const id = this.props.match.params.id;\n        return this.props.post.map((post, index) => {\n            if ((post.id).toString() === id) {\n                console.log(post, 'true');\n                const content = this.strip_html_tags(post.content.rendered);\n                const initialvalues = {\n                    \"title\": post.title.rendered,\n                    \"content\": content,\n                    \"status\": post.status\n                };\n                return (\n                    <div key={index}>\n                        <PostForm\n                            initialValues={_.pick(initialvalues, 'title', 'content', 'status')}\n                            onSubmit={this.onSubmit}\n                        />\n                    </div>\n                )\n            }\n            else {\n                return (\n                    <div></div>\n                );\n            }\n        })\n    }\n\n    render() {\n        if (this.props.post !== '') {\n            return (\n                <div>\n                    {this.initiateForm()}\n                </div>\n            );\n        }\n        else {\n            return (\n                <div>\n                    <h2>\n                        Please Try Again...\n                    </h2>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    return { post: state.posts }\n}\n\nexport default connect(mapStateToProps, {updatePost})(EditPost);"]},"metadata":{},"sourceType":"module"}