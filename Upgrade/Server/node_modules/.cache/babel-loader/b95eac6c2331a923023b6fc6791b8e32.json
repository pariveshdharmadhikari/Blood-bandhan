{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/PostForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport DropdownList from 'react-widgets/lib/DropdownList';\nimport 'react-widgets/dist/css/react-widgets.css';\n\nvar CreatePost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePost, _React$Component);\n\n  function CreatePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreatePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreatePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderField = function (_ref) {\n      var input = _ref.input,\n          label = _ref.label,\n          type = _ref.type,\n          _ref$meta = _ref.meta,\n          touched = _ref$meta.touched,\n          error = _ref$meta.error,\n          warning = _ref$meta.warning;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, label), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"textarea\", Object.assign({}, input, {\n        placeholder: label,\n        type: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      })), touched && error && React.createElement(\"span\", {\n        className: \"errormessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, error)));\n    };\n\n    _this.renderInput = function (_ref2) {\n      var input = _ref2.input,\n          label = _ref2.label,\n          type = _ref2.type,\n          maxLength = _ref2.maxLength,\n          _ref2$meta = _ref2.meta,\n          touched = _ref2$meta.touched,\n          error = _ref2$meta.error;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, label), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({}, input, {\n        placeholder: label,\n        type: type,\n        maxLength: maxLength,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), touched && error && React.createElement(\"span\", {\n        className: \"errormessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, error)));\n    };\n\n    _this.onSubmit = function (values) {\n      _this.props.onSubmit(values);\n    };\n\n    _this.status = ['publish', 'future', 'draft', 'pending', 'private', 'private'];\n\n    _this.renderDropdownList = function (_ref3) {\n      var input = _ref3.input,\n          data = _ref3.data,\n          valueField = _ref3.valueField,\n          textField = _ref3.textField;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(DropdownList, Object.assign({}, input, {\n        data: data,\n        valueField: valueField,\n        textField: textField,\n        onChange: input.onChange,\n        defaultValue: input.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(CreatePost, [{\n    key: \"deniedDoubleClick\",\n    value: function deniedDoubleClick(values) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Create Post\"), React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"formBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui form error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        type: \"text\",\n        component: this.renderInput,\n        label: \"Title\",\n        maxLength: \"15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"content\",\n        component: this.renderField,\n        label: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"status\",\n        component: this.renderDropdownList,\n        data: this.status,\n        valueField: \"value\",\n        textField: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui secondary button\",\n        type: \"button\",\n        disabled: this.props.pristine || this.props.submitting,\n        onClick: this.props.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Clear Values\"), React.createElement(\"button\", {\n        onDoubleClick: this.deniedDoubleClick,\n        className: \"ui primary button\",\n        type: \"submit\",\n        disabled: this.props.submitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return CreatePost;\n}(React.Component);\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.title) {\n    errors.title = 'Required';\n  } else if (values.title.length > 15) {\n    errors.title = 'Must be 15 characters or less';\n  }\n\n  if (!values.content) {\n    errors.content = 'Required';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'syncValidation',\n  // a unique identifier for this form\n  validate: validate,\n  // <--- validation function given to redux-form\n  initialValues: {\n    status: 'publish'\n  }\n})(CreatePost);","map":{"version":3,"sources":["/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/PostForm.js"],"names":["React","Field","reduxForm","DropdownList","CreatePost","renderField","input","label","type","meta","touched","error","warning","renderInput","maxLength","onSubmit","values","props","status","renderDropdownList","data","valueField","textField","onChange","name","textAlign","handleSubmit","pristine","submitting","reset","deniedDoubleClick","Component","validate","errors","title","length","content","form","initialValues"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form';\nimport DropdownList from 'react-widgets/lib/DropdownList';\nimport 'react-widgets/dist/css/react-widgets.css'\nclass CreatePost extends React.Component {\n\n    //const { handleSubmit, pristine, reset, submitting } = props\n    renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n        <div>\n            <label>{label}</label>\n            <div>\n                <textarea {...input} placeholder={label} type={type} />\n                {touched && (error && <span className='errormessage' >{error}</span>)}\n            </div>\n        </div>\n    )\n\n    renderInput = ({ input, label, type, maxLength, meta: { touched, error } }) => (\n        <div>\n            <label>{label}</label>\n            <div>\n                <input {...input} placeholder={label} type={type} maxLength={maxLength} />\n                {touched && (error && <span className='errormessage' >{error}</span>)}\n            </div>\n        </div>\n    )\n\n    onSubmit = (values) => {\n        this.props.onSubmit(values);\n    }\n\n    status = ['publish', 'future', 'draft', 'pending', 'private', 'private']\n\n    renderDropdownList = ({ input, data, valueField, textField }) =>{\n        return(\n            <div>\n            <DropdownList {...input}\n                data={data}\n                valueField={valueField}\n                textField={textField}\n                onChange={input.onChange}\n                defaultValue={input.name}\n            /></div>\n        );\n    }\n        \n    deniedDoubleClick(values){\n        \n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <h2 style={{ textAlign: 'center' }}>Create Post</h2>\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)} className='formBody'>\n                    <div className='ui form error'>\n                        <div className='field'>\n                            <Field\n                                name=\"title\"\n                                type=\"text\"\n                                component={this.renderInput}\n                                label=\"Title\"\n                                maxLength=\"15\"\n                            />\n                        </div>\n                        <div className='field'>\n                            <Field name=\"content\" component={this.renderField} label=\"Description\" />\n                        </div>\n\n                        <div className='field'>\n                            <Field\n                                name=\"status\"\n                                component={this.renderDropdownList}\n                                data={this.status}\n                                valueField=\"value\"\n                                textField=\"type\" />\n                        </div>\n\n\n\n                        <div className='field'>\n                            <button className='ui secondary button' type=\"button\" disabled={this.props.pristine || this.props.submitting} onClick={this.props.reset}>\n                                Clear Values\n                    </button>\n                            <button onDoubleClick={this.deniedDoubleClick} className='ui primary button' type=\"submit\" disabled={this.props.submitting}>\n                                Submit\n                    </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst validate = values => {\n    const errors = {}\n    if (!values.title) {\n        errors.title = 'Required'\n    } else if (values.title.length > 15) {\n        errors.title = 'Must be 15 characters or less'\n    }\n    if (!values.content) {\n        errors.content = 'Required'\n    }\n    return errors\n}\n\n\n\nexport default reduxForm({\n    form: 'syncValidation', // a unique identifier for this form\n    validate, // <--- validation function given to redux-form\n    initialValues: {\n        status: 'publish'\n    }\n})(CreatePost)\n\n\n\n"]},"metadata":{},"sourceType":"module"}