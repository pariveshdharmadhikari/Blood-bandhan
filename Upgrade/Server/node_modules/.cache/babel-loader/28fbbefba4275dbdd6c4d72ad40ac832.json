{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/Dashboard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/Dashboard.css';\nimport { fetchPosts, deletePost } from '../action';\nimport { connect } from 'react-redux';\nimport { toastr } from 'react-redux-toastr';\nimport Modal from 'react-responsive-modal';\nimport history from '../History';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      data: undefined,\n      popupState: false,\n      postid: ''\n    };\n\n    _this2.onLogout = function () {\n      localStorage.removeItem('token');\n      localStorage.setItem(\"IsLogedIn\", false);\n      toastr.info('Logout Successfully');\n    };\n\n    _this2.renderPopup = function (id) {\n      _this2.setState({\n        popupState: true,\n        postid: id\n      });\n    };\n\n    _this2.renderbutton = function (uid, id) {\n      var userid = localStorage.getItem('userid');\n\n      if (uid.toString() === userid) {\n        return React.createElement(\"div\", {\n          className: \"right floated content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/EditPost/\".concat(id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui primary button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Edit\")), React.createElement(\"button\", {\n          className: \"ui negative button\",\n          onClick: function onClick() {\n            return _this2.renderPopup(id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Delete\"));\n      }\n    };\n\n    _this2.renderlist = function () {\n      if (_this2.props.posts !== []) {\n        var _this = _assertThisInitialized(_assertThisInitialized(_this2));\n\n        return _this2.props.posts.map(function (post, index) {\n          var description = _this.strip_html_tags(post.excerpt.rendered);\n\n          return React.createElement(\"div\", {\n            className: \"item\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, _this.renderbutton(post.author, post.id), React.createElement(\"i\", {\n            className: \"large middle aligned icon user\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, post.title.rendered), React.createElement(\"div\", {\n            className: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, _this2.trimByWord(description))));\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Loading...\"));\n      }\n    };\n\n    _this2.deletePost = function () {\n      _this2.props.deletePost(_this2.state.postid, function (res) {\n        if (res.status === 200) {\n          _this2.setState({\n            popupState: false\n          });\n\n          toastr.warning(\"delete Successfully\");\n          setTimeout(function () {}, 0);\n        } else {\n          _this2.setState({\n            popupState: false\n          });\n\n          toastr.error(\"something went wrong\");\n        }\n      });\n    };\n\n    _this2.cancelDelete = function () {\n      _this2.setState({\n        popupState: false\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      if (localStorage.getItem('IsLogedIn') === 'true') {\n        this.props.fetchPosts(function (res) {\n          _this3.setState({\n            data: res.data\n          });\n        });\n      }\n    }\n  }, {\n    key: \"strip_html_tags\",\n    value: function strip_html_tags(str) {\n      if (str === null || str === '') return '';else str = str.toString();\n      return str.replace(/<[^>]*>/g, '');\n    }\n  }, {\n    key: \"trimByWord\",\n    value: function trimByWord(sentence) {\n      if (sentence !== '') {\n        var result = sentence;\n        var resultArray = result.split(' ');\n\n        if (resultArray.length > 10) {\n          resultArray = resultArray.slice(0, 10);\n          result = resultArray.join(' ') + 'â€¦';\n        }\n\n        return result;\n      }\n    }\n  }, {\n    key: \"deletePopup\",\n    value: function deletePopup() {\n      var popupState = this.state.popupState;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        open: popupState,\n        center: true,\n        showCloseIcon: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Confirm to delete this post?\"), React.createElement(\"button\", {\n        className: \"ui button\",\n        onClick: this.cancelDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"CANCEL\"), React.createElement(\"button\", {\n        className: \"ui negative button\",\n        onClick: this.deletePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"DELETE\")));\n    }\n  }, {\n    key: \"renderDashBoard\",\n    value: function renderDashBoard() {\n      var name = localStorage.getItem(\"Username\");\n      var temp = name.charAt(0).toUpperCase();\n      console.log(localStorage.getItem(\"IsLogedIn\"), 'renderdashboard');\n\n      if (localStorage.getItem(\"IsLogedIn\") === 'true') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \" ui secondary pointing menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"right menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/EditProfile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"avatar-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"initials\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"character\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, temp)))), React.createElement(Link, {\n          to: \"/CreatePost\",\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"Create Post\"), React.createElement(Link, {\n          to: \"/\",\n          onClick: this.onLogout,\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"LogOut\"))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \"POST LIST\"), React.createElement(\"div\", {\n          className: \"ui celled list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, this.renderlist())));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \" ui secondary pointing menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"right menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\",\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \"Login\"))), React.createElement(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, \"Please Login First\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.state.popupState && this.deletePopup(), this.renderDashBoard());\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts,\n  deletePost: deletePost\n})(Dashboard);","map":{"version":3,"sources":["/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/Dashboard.js"],"names":["React","Link","fetchPosts","deletePost","connect","toastr","Modal","history","Dashboard","state","data","undefined","popupState","postid","onLogout","localStorage","removeItem","setItem","info","renderPopup","id","setState","renderbutton","uid","userid","getItem","toString","renderlist","props","posts","_this","map","post","index","description","strip_html_tags","excerpt","rendered","author","title","trimByWord","textAlign","res","status","warning","setTimeout","error","cancelDelete","str","replace","sentence","result","resultArray","split","length","slice","join","name","temp","charAt","toUpperCase","console","log","deletePopup","renderDashBoard","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport '../css/Dashboard.css';\nimport { fetchPosts, deletePost } from '../action';\nimport { connect } from 'react-redux';\nimport { toastr } from 'react-redux-toastr';\nimport Modal from 'react-responsive-modal';\nimport history from '../History'\n\nclass Dashboard extends React.Component {\n    state = { data: undefined, popupState: false, postid: '' }\n\n    componentWillMount() {\n        if (localStorage.getItem('IsLogedIn') === 'true') {\n\n            this.props.fetchPosts((res) => {\n                this.setState({ data: res.data })\n            });\n        }\n    }\n\n    onLogout = () => {\n        localStorage.removeItem('token');\n        localStorage.setItem(\"IsLogedIn\", false);\n        toastr.info('Logout Successfully');\n    }\n\n    strip_html_tags(str) {\n        if ((str === null) || (str === ''))\n            return '';\n        else\n            str = str.toString();\n        return str.replace(/<[^>]*>/g, '');\n    }\n\n    trimByWord(sentence) {\n        if (sentence !== '') {\n            var result = sentence;\n            var resultArray = result.split(' ');\n            if (resultArray.length > 10) {\n                resultArray = resultArray.slice(0, 10);\n                result = resultArray.join(' ') + 'â€¦';\n            }\n            return result;\n        }\n\n    }\n\n    renderPopup = (id) => {\n        this.setState({ popupState: true, postid: id });\n    }\n\n    renderbutton = (uid, id) => {\n        const userid = localStorage.getItem('userid');\n        if (uid.toString() === userid) {\n            return (\n                <div className='right floated content'>\n                    <Link to={`/EditPost/${id}`} ><button className='ui primary button' >Edit</button></Link>\n                    <button className='ui negative button' onClick={() => this.renderPopup(id)} >Delete</button>\n                </div>\n            );\n        }\n    }\n\n    renderlist = () => {\n        if (this.props.posts !== []) {\n            const _this = this;\n            return this.props.posts.map((post, index) => {\n                const description = _this.strip_html_tags(post.excerpt.rendered)\n                return (\n                    <div className='item' key={index}>\n                        {_this.renderbutton(post.author, post.id)}\n                        <i className='large middle aligned icon user' />\n                        <div className='content'>\n                            <div className='header' >\n                                {post.title.rendered}\n                            </div>\n                            <div className='description'>\n\n                                {this.trimByWord(description)}\n                            </div>\n                        </div>\n                    </div>\n                );\n            })\n        }\n        else {\n            return (\n                <div>\n                    <h2 style={{ textAlign: 'center' }}>Loading...</h2>\n                </div>\n            );\n        }\n    }\n\n    deletePost = () => {\n        this.props.deletePost(this.state.postid, (res) => {\n            \n            if (res.status === 200) {\n\n                \n                \n                this.setState({ popupState: false });\n                toastr.warning(\"delete Successfully\")\n                setTimeout(function(){ }, 0);\n                \n                    \n                \n          \n            }\n            else {\n                this.setState({ popupState: false });\n                toastr.error(\"something went wrong\");\n            }\n        })\n    }\n\n    cancelDelete = () => {\n        this.setState({ popupState: false });\n    }\n\n    deletePopup() {\n        const { popupState } = this.state;\n        return (\n            <div>\n                <Modal open={popupState} center showCloseIcon={false} >\n                    <h2>Confirm to delete this post?</h2>\n                    <button className='ui button' onClick={this.cancelDelete}>CANCEL</button>\n                    <button className='ui negative button' onClick={this.deletePost}>DELETE</button>\n                </Modal>\n            </div>\n        );\n    }\n\n    renderDashBoard() {\n        const name = localStorage.getItem(\"Username\")\n        const temp = (name.charAt(0)).toUpperCase();\n        console.log(localStorage.getItem(\"IsLogedIn\"), 'renderdashboard');\n        if (localStorage.getItem(\"IsLogedIn\") === 'true') {\n            return (\n                <div>\n                    <div className=\" ui secondary pointing menu\" >\n                        <div className=\"right menu\" >\n                            <Link to=\"/EditProfile\">\n                                <div className=\"avatar-circle\" >\n                                    <span className=\"initials\" ><div className='character' >{temp}</div></span>\n                                </div></Link>\n                            <Link to=\"/CreatePost\" className=\"item\" >Create Post</Link>\n                            <Link to=\"/\" onClick={this.onLogout} className=\"item\" >LogOut</Link>\n                        </div>\n                    </div>\n                    <div>\n                        <h2 style={{ textAlign: 'center' }}>POST LIST</h2>\n                        <div className='ui celled list' >\n                            {this.renderlist()}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div>\n                    <div className=\" ui secondary pointing menu\" >\n                        <div className=\"right menu\" >\n                            <Link to=\"/\" className=\"item\" >Login</Link>\n                        </div>\n                    </div>\n                    <h2 style={{ textAlign: 'center' }}>Please Login First</h2>\n                </div>\n            );\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                {this.state.popupState && this.deletePopup()}\n                {this.renderDashBoard()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    return { posts: state.posts }\n}\n\nexport default connect(mapStateToProps, { fetchPosts, deletePost })(Dashboard)"]},"metadata":{},"sourceType":"module"}