{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/Form.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport '../css/Form.css';\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderInput = function (_ref) {\n      var input = _ref.input,\n          type = _ref.type,\n          label = _ref.label,\n          meta = _ref.meta,\n          maxLength = _ref.maxLength;\n      return React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        type: type,\n        maxLength: maxLength,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    _this.onSubmit = function (formValues) {\n      _this.props.onSubmit(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"renderError\",\n    value: function renderError(_ref2) {\n      var error = _ref2.error,\n          touched = _ref2.touched;\n\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"errormessage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, error));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"ui form error formmargin \",\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"first_name\",\n        type: \"text\",\n        component: this.renderInput,\n        label: \"First Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"last_name\",\n        type: \"text\",\n        component: this.renderInput,\n        label: \"Last Name\",\n        maxLength: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        component: this.renderInput,\n        label: \"E-mail\",\n        maxLength: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"username\",\n        type: \"text\",\n        component: this.renderInput,\n        label: \"UserName\",\n        maxLength: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"password\",\n        type: \"password\",\n        component: this.renderInput,\n        label: \"Password\",\n        maxLength: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"ConfirmPassword\",\n        type: \"password\",\n        component: this.renderInput,\n        label: \"ConfirmPassword\",\n        maxLength: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.first_name) {\n    errors.firstname = 'you must Enter Title';\n  } else if (Number(formValues.first_name) > 30) {\n    errors.age = 'Sorry, you must be at least 18 years old';\n  }\n\n  if (!formValues.last_name) {\n    errors.lastname = 'you must Enter Description';\n  }\n\n  if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,3}$/i.test(formValues.email)) {\n    errors.email = 'Enter Valid Email';\n  }\n\n  if (!/^[a-zA-Z0-9]/i.test(formValues.username)) {\n    errors.username = 'Only Alfanumeric value will aceepted';\n  }\n\n  if (!formValues.password) {\n    errors.password = 'you must Enter Password';\n  } else if (formValues.password.length < 6) {\n    errors.password = 'Minimum length is 6 character';\n  } // if(!/^[a-z]/.test(formValues.password)){\n  //     errors.password='Must have one lower case value in Password'\n  // }\n  // if(!/^[0-9]/.test(formValues.password)){\n  //     errors.password='Must have one numeric value in Password'\n  // }\n\n\n  if (!formValues.ConfirmPassword) {\n    errors.ConfirmPassword = 'Please Re-Enter Password';\n  } else if (formValues.ConfirmPassword !== formValues.password) {\n    errors.ConfirmPassword = 'Password mismatched';\n  }\n\n  return errors;\n};\n\nvar wrapedform = reduxForm({\n  form: 'Form',\n  validate: validate\n})(Form);\nexport default wrapedform;","map":{"version":3,"sources":["/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/Form.js"],"names":["React","Field","reduxForm","Form","renderInput","input","type","label","meta","maxLength","renderError","onSubmit","formValues","props","error","touched","handleSubmit","Component","validate","errors","first_name","firstname","Number","age","last_name","lastname","test","email","username","password","length","ConfirmPassword","wrapedform","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form';\nimport '../css/Form.css';\n\nclass Form extends React.Component {\n\n\n    renderError({ error, touched }) {\n        if (touched && error) {\n            return (\n                <div className='error message'>\n                    <div className=\"errormessage\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    \n\n    renderInput = ({ input, type,label, meta ,maxLength}) => {\n        return (\n\n            <div className='field'>\n                <label>{label}</label>\n                <input {...input} type={type} maxLength={maxLength} />\n                {this.renderError(meta)}\n            </div>\n        )\n    }\n\n    onSubmit = (formValues) => {\n        this.props.onSubmit(formValues);\n    }\n\n    render() {\n        return (\n            <form className=\"ui form error formmargin \" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <Field name=\"first_name\" type=\"text\" component={this.renderInput} label=\"First Name\" />\n                <Field name=\"last_name\" type=\"text\" component={this.renderInput} label=\"Last Name\" maxLength=\"30\"/>\n                <Field name=\"email\" type=\"text\" component={this.renderInput} label=\"E-mail\" maxLength=\"50\"/>\n                <Field name=\"username\" type=\"text\" component={this.renderInput} label=\"UserName\" maxLength=\"20\" />\n                <Field name=\"password\" type=\"password\" component={this.renderInput} label=\"Password\" maxLength=\"20\"/>\n                <Field name=\"ConfirmPassword\" type=\"password\" component={this.renderInput} label=\"ConfirmPassword\" maxLength=\"20\"/>\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {}\n    if (!formValues.first_name) {\n        errors.firstname = 'you must Enter Title'\n    }else if (Number(formValues.first_name) >30 ) {\n        errors.age = 'Sorry, you must be at least 18 years old'\n    }\n\n    if (!formValues.last_name) {\n        errors.lastname = 'you must Enter Description'\n    }\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,3}$/i.test(formValues.email)) {\n        errors.email = 'Enter Valid Email'\n    }\n    if (!/^[a-zA-Z0-9]/i.test(formValues.username)) {\n        errors.username = 'Only Alfanumeric value will aceepted'\n    }\n\n    if (!formValues.password) {\n        errors.password = 'you must Enter Password'\n    }else if(formValues.password.length<6){\n        errors.password = 'Minimum length is 6 character'\n    }\n    // if(!/^[a-z]/.test(formValues.password)){\n    //     errors.password='Must have one lower case value in Password'\n    // }\n    // if(!/^[0-9]/.test(formValues.password)){\n    //     errors.password='Must have one numeric value in Password'\n    // }\n\n\n    if (!formValues.ConfirmPassword) {\n        errors.ConfirmPassword = 'Please Re-Enter Password';\n    } else if (formValues.ConfirmPassword !== formValues.password) {\n        errors.ConfirmPassword = 'Password mismatched';\n    }\n\n    return errors;\n}\n\nconst wrapedform = reduxForm({\n    form: 'Form',\n    validate\n})(Form);\n\n\nexport default wrapedform;\n"]},"metadata":{},"sourceType":"module"}