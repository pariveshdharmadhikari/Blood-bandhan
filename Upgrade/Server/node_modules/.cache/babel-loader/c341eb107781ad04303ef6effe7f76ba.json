{"ast":null,"code":"import _classCallCheck from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/DATA/Projects/All_Projects-assignment/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/Dashboard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PostList from './PostList';\nimport '../css/Dashboard.css';\nimport { fetchPosts } from '../action';\nimport { connect } from 'react-redux';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      flag: false\n    };\n\n    _this.onLogout = function () {\n      localStorage.removeItem(\"IsLogedIn\");\n      localStorage.removeItem('token');\n\n      _this.setState({\n        flag: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchPosts();\n      this.setState({\n        flag: localStorage.getItem(\"IsLogedIn\"),\n        name: localStorage.getItem(\"Username\")\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"renderlist\",\n    value: function renderlist() {\n      console.log(this.props.posts);\n      var posts = this.props.posts;\n\n      if (!posts) {\n        return posts.map(function (post, index) {\n          return React.createElement(\"div\", {\n            className: \"item\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"large middle aligned icon camera\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, post.title.rendered, React.createElement(\"div\", {\n            className: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, post.excerpt.rendered)));\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderDashBoard\",\n    value: function renderDashBoard() {\n      var temp = this.state.name.charAt(0).toUpperCase();\n\n      if (this.state.flag) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \" ui secondary pointing menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"right menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/EditProfile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"avatar-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"initials\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"character\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, temp)))), React.createElement(Link, {\n          to: \"/CreatePost\",\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Create Post\"), React.createElement(Link, {\n          to: \"/\",\n          onClick: this.onLogout,\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"LogOut\"))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, this.renderlist())));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \" ui secondary pointing menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"right menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\",\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Login\"))), React.createElement(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Please Login First\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.renderDashBoard());\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.users[0]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(Dashboard);","map":{"version":3,"sources":["/Volumes/DATA/Projects/All_Projects-assignment/demo/src/component/Dashboard.js"],"names":["React","Link","PostList","fetchPosts","connect","Dashboard","state","flag","onLogout","localStorage","removeItem","setState","props","getItem","name","console","log","posts","map","post","index","title","rendered","excerpt","temp","charAt","toUpperCase","renderlist","textAlign","renderDashBoard","Component","mapStateToProps","users"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport PostList from './PostList'\nimport '../css/Dashboard.css';\nimport { fetchPosts } from '../action';\nimport { connect } from 'react-redux';\n\nclass Dashboard extends React.Component {\n    state = { flag: false }\n\n    componentWillMount() {\n        this.props.fetchPosts();\n        this.setState({\n            flag: localStorage.getItem(\"IsLogedIn\"),\n            name: localStorage.getItem(\"Username\")\n        })\n\n    }\n    componentDidMount() {\n\n    }\n\n    onLogout = () => {\n        localStorage.removeItem(\"IsLogedIn\");\n        localStorage.removeItem('token');\n        this.setState({ flag: false })\n    }\n\n    renderlist() {\n        console.log(this.props.posts);\n        const { posts } = this.props;\n        if (!posts) {\n            return posts.map((post, index) => {\n                return (\n                    <div className='item' key={index}>\n                        <i className='large middle aligned icon camera' />\n                        <div className='content'>\n                            {/* <Link to={`/streams/${stream.id}`} className=\"header\"> */}\n                            {post.title.rendered}\n                            {/* </Link> */}\n                            <div className='description'>\n                                {post.excerpt.rendered}\n                            </div>\n                        </div>\n                    </div>\n                );\n            })\n        }\n        else{\n            return(\n                <div>\n                    <h2></h2>\n                </div>\n            );\n        }\n\n    }\n\n    renderDashBoard() {\n        const temp = (this.state.name.charAt(0)).toUpperCase();\n\n        if (this.state.flag) {\n            return (\n                <div>\n                    <div className=\" ui secondary pointing menu\" >\n                        <div className=\"right menu\" >\n\n                            <Link to=\"/EditProfile\">\n                                <div className=\"avatar-circle\" >\n                                    <span className=\"initials\" ><div className='character' >{temp}</div></span>\n                                </div></Link>\n\n                            <Link to=\"/CreatePost\" className=\"item\" >Create Post</Link>\n                            <Link to=\"/\" onClick={this.onLogout} className=\"item\" >LogOut</Link>\n\n                        </div>\n                    </div>\n                    <div>\n                        <div>\n                            {this.renderlist()}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div>\n                    <div className=\" ui secondary pointing menu\" >\n                        <div className=\"right menu\" >\n                            <Link to=\"/\" className=\"item\" >Login</Link>\n                        </div>\n                    </div>\n                    <h2 style={{ textAlign: 'center' }}>Please Login First</h2>\n                </div>\n\n            );\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.renderDashBoard()}\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    return { posts: state.users[0] }\n}\n\nexport default connect(mapStateToProps, { fetchPosts })(Dashboard)"]},"metadata":{},"sourceType":"module"}